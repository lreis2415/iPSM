### Set each program separatly.

# predict mapping (iPSM)
SET(PREDICT_SAMPLE_BASED_DIR ./predict)
file(GLOB_RECURSE PREDICT_SAMPLE_BASED_SOURCES ${PREDICT_SAMPLE_BASED_DIR}/ipsmOperator.cpp ${PREDICT_SAMPLE_BASED_DIR}/ipsm.cpp)
file(GLOB_RECURSE PREDICT_SAMPLE_BASED_HEADERS ${PREDICT_SAMPLE_BASED_DIR}/ipsmOperator.h)
source_group("Header Files" FILES ${PREDICT_SAMPLE_BASED_HEADERS})
ADD_EXECUTABLE(ipsm ${ALL_BASE_SRCS} ${PREDICT_SAMPLE_BASED_SOURCES} ${PREDICT_SAMPLE_BASED_HEADERS})

# predict mapping (iPSMFilter)
SET(PREDICT_SAMPLE_BASED_DIR ./predict)
file(GLOB_RECURSE PREDICT_SAMPLE_BASED_SOURCES ${PREDICT_SAMPLE_BASED_DIR}/*.c ${PREDICT_SAMPLE_BASED_DIR}/ipsmFilter.cpp  ${PREDICT_SAMPLE_BASED_DIR}/ipsmFilterOperator.cpp)
file(GLOB_RECURSE PREDICT_SAMPLE_BASED_HEADERS ${PREDICT_SAMPLE_BASED_DIR}/ipsmFilterOperator.h ${PREDICT_SAMPLE_BASED_DIR}/*.hpp)
source_group("Header Files" FILES ${PREDICT_SAMPLE_BASED_HEADERS})
ADD_EXECUTABLE(ipsmFilter ${ALL_BASE_SRCS} ${PREDICT_SAMPLE_BASED_SOURCES} ${PREDICT_SAMPLE_BASED_HEADERS})


# predict mapping (iPSMAIDW)
SET(PREDICT_SAMPLE_BASED_DIR ./predict)
file(GLOB_RECURSE PREDICT_SAMPLE_BASED_SOURCES ${PREDICT_SAMPLE_BASED_DIR}/*.c ${PREDICT_SAMPLE_BASED_DIR}/ipsmAIDW.cpp  ${PREDICT_SAMPLE_BASED_DIR}/ipsmAIDWOperator.cpp)
file(GLOB_RECURSE PREDICT_SAMPLE_BASED_HEADERS ${PREDICT_SAMPLE_BASED_DIR}/ipsmAIDWOperator.h ${PREDICT_SAMPLE_BASED_DIR}/*.hpp)
source_group("Header Files" FILES ${PREDICT_SAMPLE_BASED_HEADERS})
ADD_EXECUTABLE(ipsmAIDW ${ALL_BASE_SRCS} ${PREDICT_SAMPLE_BASED_SOURCES} ${PREDICT_SAMPLE_BASED_HEADERS})

# predict mapping (iPSMIDW)
SET(PREDICT_SAMPLE_BASED_DIR ./predict)
file(GLOB_RECURSE PREDICT_SAMPLE_BASED_SOURCES ${PREDICT_SAMPLE_BASED_DIR}/*.c ${PREDICT_SAMPLE_BASED_DIR}/ipsmIDW.cpp  ${PREDICT_SAMPLE_BASED_DIR}/ipsmIDWOperator.cpp)
file(GLOB_RECURSE PREDICT_SAMPLE_BASED_HEADERS ${PREDICT_SAMPLE_BASED_DIR}/ipsmIDWOperator.h ${PREDICT_SAMPLE_BASED_DIR}/*.hpp)
source_group("Header Files" FILES ${PREDICT_SAMPLE_BASED_HEADERS})
ADD_EXECUTABLE(ipsmIDW ${ALL_BASE_SRCS} ${PREDICT_SAMPLE_BASED_SOURCES} ${PREDICT_SAMPLE_BASED_HEADERS})

# ipsm_test
SET(TEST_BASE_DIR ./test)
file(GLOB_RECURSE TEST_BASE_SOURCES ${TEST_BASE_DIR}/*.c ${TEST_BASE_DIR}/*.cpp ${PREDICT_SAMPLE_BASED_SOURCES})
file(GLOB_RECURSE TEST_BASE_HEADERS ${TEST_BASE_DIR}/*.h ${PREDICT_SAMPLE_BASED_HEADERS})
source_group("Header Files" FILES ${TEST_BASE_HEADERS})
# ADD_EXECUTABLE(ipsm_test ${ALL_BASE_SRCS} ${TEST_BASE_SOURCES} ${TEST_BASE_HEADERS})


SET(IPSM_TARGETS
				   ipsm
                   ipsmFilter
				   ipsmIDW
				   ipsmAIDW
                #   ipsm_test
                  )

foreach (c_target ${IPSM_TARGETS})
    target_link_libraries(${c_target} ${MPI_LIBRARIES} ${GDAL_LIBRARIES})
    install(TARGETS ${c_target} DESTINATION ${INSTALL_DIR})
    LIST(APPEND APP_TARGETS ${c_target})
    IF (MSVC)
        SET_PROPERTY(TARGET ${c_target} PROPERTY FOLDER "apps")
    ENDIF ()
endforeach (c_target ${IPSM_TARGETS})

SET(APP_TARGETS "${APP_TARGETS}" PARENT_SCOPE)
